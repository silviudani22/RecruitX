// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecruitXBackend.Data;

#nullable disable

namespace RecruitXBackend.Migrations
{
    [DbContext(typeof(RecruitXContext))]
    partial class RecruitXContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecruitXBackend.Models.Domain.Company", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("domain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("RecruitXBackend.Models.Domain.JobApplication", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("ListedJobid")
                        .HasColumnType("int");

                    b.Property<int?>("Usersid")
                        .HasColumnType("int");

                    b.Property<DateTime>("applicationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("jobId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ListedJobid");

                    b.HasIndex("Usersid");

                    b.ToTable("JobApplications");
                });

            modelBuilder.Entity("RecruitXBackend.Models.Domain.ListedJob", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Companyid")
                        .HasColumnType("int");

                    b.Property<string>("companyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("experienceNedeed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("flexibility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idCompany")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("program")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("technology")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Companyid");

                    b.ToTable("ListedJobs");
                });

            modelBuilder.Entity("RecruitXBackend.Models.Domain.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RecruitXBackend.Models.Domain.JobApplication", b =>
                {
                    b.HasOne("RecruitXBackend.Models.Domain.ListedJob", null)
                        .WithMany("JobApplications")
                        .HasForeignKey("ListedJobid");

                    b.HasOne("RecruitXBackend.Models.Domain.Users", null)
                        .WithMany("JobApplications")
                        .HasForeignKey("Usersid");
                });

            modelBuilder.Entity("RecruitXBackend.Models.Domain.ListedJob", b =>
                {
                    b.HasOne("RecruitXBackend.Models.Domain.Company", null)
                        .WithMany("ListedJobs")
                        .HasForeignKey("Companyid");
                });

            modelBuilder.Entity("RecruitXBackend.Models.Domain.Company", b =>
                {
                    b.Navigation("ListedJobs");
                });

            modelBuilder.Entity("RecruitXBackend.Models.Domain.ListedJob", b =>
                {
                    b.Navigation("JobApplications");
                });

            modelBuilder.Entity("RecruitXBackend.Models.Domain.Users", b =>
                {
                    b.Navigation("JobApplications");
                });
#pragma warning restore 612, 618
        }
    }
}
